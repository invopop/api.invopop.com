openapi: 3.0.0
info:
  contact:
    email: dev@invopop.com
    name: Invopop Developers
  description: The Invopop Silo Service API allows you to define allows you to store
    entries.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Silo Service API
  version: 1.0.0
servers:
- description: production
  url: https://api.invopop.com
- description: local development
  url: https://api.invopop.dev
paths:
  /silo/v1/entries:
    get:
      description: Fetch all the silo entries in the current company.
      parameters:
      - description: Folder to search within.
        in: query
        name: folder
        schema:
          description: Folder to search within.
          example: invoices
          title: Folder
          type: string
      - description: Date from which results are provided.
        in: query
        name: created_at
        schema:
          description: Date from which results are provided.
          example: "2023-08-02T00:00:00.000Z"
          title: Created At
          type: string
      - description: Position provided by the previous result's next_cursor property.
        in: query
        name: cursor
        schema:
          description: Position provided by the previous result's next_cursor property.
          title: Cursor
          type: string
      - description: Maximum number of entries to show in a page of results.
        in: query
        name: limit
        schema:
          description: Maximum number of entries to show in a page of results.
          example: 20
          title: Limit
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloEntryCollection'
          description: OK
  /silo/v1/entries/{entry_id}/states:
    get:
      description: Fetch the current and previous state objects for a silo entry.
      parameters:
      - description: UUID of the entry to find states for.
        in: path
        name: entry_id
        required: true
        schema:
          description: UUID of the entry to find states for.
          example: 347c5b04-cde2-11ed-afa1-0242ac120002
          title: Entry ID
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloStateCollection'
          description: OK
  /silo/v1/entries/{entry_id}/states/{at}:
    post:
      description: Create a new state for a silo entry
      parameters:
      - description: UUID of the entry to create state for
        in: path
        name: entry_id
        required: true
        schema:
          description: UUID of the entry to create state for
          example: 347c5b04-cde2-11ed-afa1-0242ac120002
          title: Entry ID
          type: string
      - description: ISO timestamp with millisecond accuracy.
        in: path
        name: at
        required: true
        schema:
          description: ISO timestamp with millisecond accuracy.
          example: "2023-08-02T00:00:00.000Z"
          title: Timestamp
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiloCreateState'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloState'
          description: OK
  /silo/v1/entries/{id}:
    get:
      description: Fetch an existing silo entry given its UUID.
      parameters:
      - description: UUID of the silo entry to fetch.
        in: path
        name: id
        required: true
        schema:
          description: UUID of the silo entry to fetch.
          example: 347c5b04-cde2-11ed-afa1-0242ac120002
          title: ID
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloEntry'
          description: OK
    patch:
      description: Update an existing silo entry given its UUID.
      parameters:
      - description: UUID of the silo entry to update.
        in: path
        name: id
        required: true
        schema:
          description: UUID of the silo entry to update.
          example: 347c5b04-cde2-11ed-afa1-0242ac120002
          title: ID
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiloUpdateEntry'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloEntry'
          description: OK
    put:
      description: Create a new silo entry idempotently with the given UUIDv1 (other
        versions not supported).
      parameters:
      - description: UUID of the silo entry to create.
        in: path
        name: id
        required: true
        schema:
          description: UUID of the silo entry to create.
          example: 347c5b04-cde2-11ed-afa1-0242ac120002
          title: ID
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiloCreateEntry'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloEntry'
          description: OK
  /silo/v1/entries/{id}/related:
    get:
      description: Find silo entries whose document mentions the given entry's UUID.
      parameters:
      - description: Context within a document for which the silo entry's UUID has
          been mentioned.
        in: query
        name: context
        schema:
          description: Context within a document for which the silo entry's UUID has
            been mentioned.
          example: line.item
          title: Context
          type: string
      - description: Date from which results are provided.
        in: query
        name: created_at
        schema:
          description: Date from which results are provided.
          example: "2023-08-02T00:00:00.000Z"
          title: Created At
          type: string
      - description: Position provided by the previous result's next_cursor property.
        in: query
        name: cursor
        schema:
          description: Position provided by the previous result's next_cursor property.
          title: Cursor
          type: string
      - description: Maximum number of entries to show in a page of results.
        in: query
        name: limit
        schema:
          description: Maximum number of entries to show in a page of results.
          example: 20
          title: Limit
          type: integer
      - description: Silo entry ID to find related entries for.
        in: path
        name: id
        required: true
        schema:
          description: Silo entry ID to find related entries for.
          example: 347c5b04-cde2-11ed-afa1-0242ac120002
          title: ID
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloEntryCollection'
          description: OK
  /silo/v1/gobl/build:
    post:
      description: Build GOBL Envelopes or Objects for validation purposes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiloBuildGOBL'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloGOBL'
          description: OK
  /silo/v1/gobl/sign:
    post:
      description: Sign GOBL Envelopes or Objects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiloSignGOBL'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloGOBL'
          description: OK
  /silo/v1/search:
    get:
      description: Perform a free-text search on all documents in the current company.
      parameters:
      - description: Search query string.
        in: query
        name: q
        required: true
        schema:
          description: Search query string.
          example: TEST
          title: Query
          type: string
      - description: Folder to search within.
        in: query
        name: folder
        schema:
          description: Folder to search within.
          example: invoices
          title: Folder
          type: string
      - description: Maximum number of entries to show in a page of results.
        in: query
        name: limit
        schema:
          description: Maximum number of entries to show in a page of results.
          example: 20
          title: Limit
          type: integer
      - description: The number of entries to skip in the result set.
        in: query
        name: offset
        schema:
          description: The number of entries to skip in the result set.
          example: 10
          title: Offset
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiloEntrySearchCollection'
          description: OK
components:
  schemas:
    CbcMeta:
      additionalProperties:
        type: string
      type: object
    DsigDigest:
      properties:
        alg:
          type: string
        val:
          type: string
      type: object
    SiloAttachment:
      properties:
        created_at:
          description: The date and time this attachment was created.
          example: "2018-01-01T00:00:00.000Z"
          title: Created At
          type: string
        desc:
          description: Description of the file.
          example: Invoice for January 2021.
          title: Description
          type: string
        hash:
          description: SHA256 hash of the file.
          example: a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6
          title: Hash
          type: string
        id:
          description: The UUID that identifies the attachment.
          title: ID
          type: string
        meta:
          additionalProperties:
            type: string
          description: Any additional meta data about the attachment.
          title: Meta
          type: object
        mime:
          description: MIME type of the file.
          example: application/pdf
          title: MIME
          type: string
        name:
          description: Name of the file.
          example: invoice.pdf
          title: Name
          type: string
        size:
          description: Size of the file in bytes.
          example: 12345
          title: Size
          type: integer
        stored:
          description: When true, indicates that the file's contents have been uploaded
            successfully.
          example: true
          title: Stored
          type: boolean
        url:
          description: URL where the file's contents can be downloaded.
          title: Public URL
          type: string
      type: object
    SiloBuildGOBL:
      properties:
        data:
          description: GOBL Envelope or Object to calculate and validate.
          title: Data
        envelop:
          description: When true, a complete GOBL Envelope will be provided as opposed
            to the standalone object.
          title: Envelop
          type: boolean
      type: object
    SiloCreateEntry:
      properties:
        content_type:
          description: The content type of the data being uploaded.
          example: application/json
          title: Content Type
          type: string
        correct:
          description: JSON object containing the GOBL correction option data.
          example:
            credit: true
          title: Correct
        data:
          description: Data contents to upload which may either be a GOBL Envelope
            or Object. Any partial data will be calculated and validated automatically.
          title: Data
        folder:
          description: In which folder the entry should be associated, leave empty
            to use the automatic rules.
          title: Folder
          type: string
        previous_id:
          description: The UUIDv1 of the previous silo entry to copy.
          example: 347c5b04-cde2-11ed-afa1-0242ac120002
          title: Previous ID
          type: string
      type: object
    SiloCreateState:
      properties:
        key:
          description: Key for the state.
          example: paid
          title: Key
          type: string
        meta:
          additionalProperties:
            type: string
          description: Any additional structured fields about the state.
          title: Meta
          type: object
        notes:
          description: Additional details.
          title: Notes
          type: string
      required:
      - key
      type: object
    SiloEntry:
      properties:
        attachments:
          description: List of attachments for this entry.
          items:
            $ref: '#/components/schemas/SiloAttachment'
          title: Attachments
          type: array
        context:
          description: When entry provided within a related query, this is the context
            within the document.
          example: line.item
          title: Context
          type: string
        created_at:
          description: The date and time the silo entry was created.
          example: "2018-01-01T00:00:00.000Z"
          title: Created At
          type: string
        data:
          description: JSON envelope contents when specifically requested.
          title: Data
        digest:
          $ref: '#/components/schemas/DsigDigest'
        doc_schema:
          description: Schema URL for the envelope's payload.
          example: https://gobl.org/draft-0/bill/invoice
          title: Object Schema
          type: string
        draft:
          description: When true, indicates that the envelope is a draft.
          example: true
          title: Draft
          type: boolean
        env_schema:
          description: Schema URL for the envelope.
          example: https://gobl.org/draft-0/envelope
          title: Envelope Schema
          type: string
        folder:
          description: Key for the folder where the entry is located.
          example: sales
          title: Folder
          type: string
        id:
          description: UUID of the silo entry.
          example: 347c5b04-cde2-11ed-afa1-0242ac120002
          title: ID
          type: string
        invalid:
          description: When true, the envelope's contents are invalid and need to
            be reviewed.
          example: true
          title: Invalid
          type: boolean
        meta:
          $ref: '#/components/schemas/CbcMeta'
        snippet:
          description: JSON object containing a snippet of the document.
          example:
            title: Sample Title
          title: Snippet
        state:
          description: Current state of the silo entry if not a draft.
          example: sent
          title: State
          type: string
        tags:
          items:
            type: string
          title: Tags
          type: array
        updated_at:
          description: The date and time the silo entry was last updated.
          example: "2018-01-01T00:00:00.000Z"
          title: Updated At
          type: string
      type: object
    SiloEntryCollection:
      properties:
        created_at:
          description: Date from which results are provided.
          example: "2018-01-01T00:00:00.000Z"
          title: Created At
          type: string
        cursor:
          description: Cursor used to identify the current page of results.
          title: Cursor
          type: string
        folder:
          description: Key for the folder
          example: sales
          title: Folder
          type: string
        limit:
          description: Maximum number of entries to show in a page of results, up
            to 100.
          example: 20
          title: Limit
          type: integer
        list:
          description: Array of entries.
          items:
            $ref: '#/components/schemas/SiloEntry'
          nullable: true
          title: List
          type: array
        next_cursor:
          description: Cursor used to identify the next page of results.
          title: Next Cursor
          type: string
      type: object
    SiloEntrySearchCollection:
      properties:
        folder:
          description: Key for the folder
          example: sales
          title: Folder
          type: string
        limit:
          description: Maximum number of entries to show in a page of results, up
            to 100.
          example: 20
          title: Limit
          type: integer
        list:
          description: Array of entries.
          items:
            $ref: '#/components/schemas/SiloEntry'
          nullable: true
          title: List
          type: array
        offset:
          description: Number of entries to skip in the result set.
          example: 20
          title: Offset
          type: integer
        query:
          description: String query used for the search.
          example: FT-101
          title: Query
          type: string
      type: object
    SiloGOBL:
      properties:
        data:
          description: GOBL Envelope or Object response to a build request.
          title: Data
      type: object
    SiloSignGOBL:
      properties:
        data:
          description: GOBL Envelope or Object to calculate, validate, and sign.
          title: Data
      type: object
    SiloState:
      properties:
        created_at:
          description: The date and time this state was created.
          example: "2018-01-01T00:00:00.000Z"
          title: Created At
          type: string
        id:
          description: UUID and timestamp composite ID.
          title: ID
          type: string
        key:
          description: Key for the state
          example: paid
          title: Key
          type: string
        meta:
          additionalProperties:
            type: string
          description: Any additional structured fields about the state.
          title: Meta
          type: object
        notes:
          description: Additional details.
          title: Notes
          type: string
        src:
          description: Identifier key for the source of the state
          example: api-key
          title: Source
          type: string
        src_id:
          description: UUID for the entity that created the state
          example: 347c5b04-cde2-11ed-afa1-0242ac120002
          title: Source ID
          type: string
      type: object
    SiloStateCollection:
      properties:
        list:
          description: Array of states.
          items:
            $ref: '#/components/schemas/SiloState'
          nullable: true
          title: List
          type: array
      type: object
    SiloUpdateEntry:
      properties:
        data:
          description: Updated envelope data. New document contents will only be accepted
            if the existing envelope data is still a draft.
          title: Data
        folder:
          description: New location for the silo entry.
          example: drafts
          title: Folder
          type: string
      type: object
  securitySchemes:
    authToken:
      bearerFormat: JWT
      scheme: bearer
      type: http
